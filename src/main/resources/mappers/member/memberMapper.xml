<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.care.root.mybatis.member.MemberMapper">

	<resultMap id="member" type="com.care.root.member.dto.MemberDTO">
		<id property="id" column="id"/>
		<result property="addr" column="addr"/>
		<result property="limitTime" column="limit_time"/>
		<result property="sessionId" column="session_id"/>
	</resultMap>
	
	<resultMap id="kakaomember" type="com.care.root.member.dto.KakaoMemberDTO">
		<id property="id" column="id"/>
		<result property="email" column="email"/>
		<result property="addr" column="addr"/>
	</resultMap>
	
	<resultMap id="booking" type="com.care.root.member.dto.BookingDTO">
		<id property="lockerId" column="lockerid"/>
		<result property="checkIn" column="checkin"/>
		<result property="sDate" column="s_date"/>
		<result property="id" column="id"/>
		<result property="email" column="email"/>
	</resultMap>

	<select id="userCheck" resultMap="member">
		select * from member where id=#{id}
	</select>
	
	<select id="memberInfo" resultMap="member">
		select B.* from(select rownum rn, A.* from
		(select * from member order by id asc)A)B where rn between #{s} and #{e}
	</select>
	
	<select id="kakaomemberList" resultMap="kakaomember">
		select B.* from(select rownum rn, A.* from
		(select * from kakaomember order by email asc)A)B where rn between #{s} and #{e}
	</select>
	
	<select id="selectMemberCount" resultType="Integer">
		select count(*) from member
	</select>
	
	<select id="selectKakaomemberCount" resultType="Integer">
		select count(*) from kakaomember
	</select>
	
	<insert id="register">
		insert into member(id, pw, addr) values(#{id}, #{pw}, #{addr})
	</insert>
	
	<update id="keepLogin">
		update member set session_id=#{sessionId}, limit_time=#{limitDate} where id=#{id}
	</update>
	
	<select id="getUserSessionId" resultMap="member">
		select * from member where session_id = #{sessionId}
	</select>
	
	<select id="KakaoLoginChk" resultMap="kakaomember">
		select * from kakaomember where id = #{id}
	</select>
	
	<insert id="KakaoRegister" parameterType="map">
		insert into kakaomember(id, email) values(#{id}, #{email})
	</insert>
	
	<select id="kakaoMemberInfo" resultMap="kakaomember">
		select * from kakaomember where email=#{email}
	</select>
	
	<update id="kakao_modify_save">
		update kakaomember set addr=#{addr} where id=#{id}
	</update>
	
	<update id="modify_save">
		update member set addr=#{addr}, pw=#{pw} where id=#{id}
	</update>
	
	<select id="bookingList" resultMap="booking">
		select B.* from(select rownum rn, A.* from
		(select * from booking order by lockerid asc)A)B where rn between #{s} and #{e}
	</select>
	
	<select id="searchId" resultMap="member">
		select B.* from(select rownum rn, A.* from
		(select * from member where id like '%'||#{userId}||'%' order by id asc)A)B where rn between #{s} and #{e}
	</select>
	
	<select id="searchEmail" resultMap="kakaomember">
		select B.* from(select rownum rn, A.* from
		(select * from kakaomember where email like '%'||#{userEmail}||'%' order by email asc)A)B where rn between #{s} and #{e}
	</select>
	
	<select id="selectSearchIdCount" resultType="Integer">
		select count(*) from member where id like '%'||#{userId}||'%'
	</select>
	
	<select id="selectSearchEmailCount" resultType="Integer">
		select count(*) from kakaomember where email like '%'||#{userEmail}||'%'
	</select>
	
	<select id="selectBookingCount" resultType="Integer">
		select count(*) from booking
	</select>
	
	<select id="selectSearchBookingCount" resultType="Integer">
		select count(*) from booking where lockerid like '%'||#{lockerId}||'%'
	</select>
	
	<select id="searchLockerId" resultMap="booking">
		select B.* from(select rownum rn, A.* from
		(select * from booking where ${searchOption} like '%'||#{inputValue}||'%' order by lockerid asc)A)B where rn between #{s} and #{e}
	</select>
	
	<update id="bookingCancel">
		update booking set checkin='', s_date='', id='', email='' where lockerid=#{lockerId}
	</update>
	
	<select id="searchBookingId" resultMap="booking">
		select * from booking where id=#{id}
	</select>
	
	<select id="searchBookingEmail" resultMap="booking">
		select * from booking where email=#{email}
	</select>
	
	<select id="lockerCheck" resultMap="booking">
		select * from booking where lockerid like #{lockerId}||'%' and checkin='checked'
	</select>
	
	<!-- 
	<update id="BookingConfirm">
		update booking 
		<set>
			<if test="checkin != null">checkin=#{checkin},</if>
			<if test="s_date != null">s_date=#{s_date},</if>
			<if test="email != null">email=#{email},</if>
			<if test="id != null">id=#{id},</if>
		</set>
		where lockerid=#{confirm}
	</update>
	 -->
	 
	 <update id="BookingConfirm1">
	 	update booking set checkin=#{checkin}, s_date=#{s_date}, id=#{id} where lockerid=#{confirm}
	 </update>
	 
	 <update id="BookingConfirm2">
	 	update booking set checkin=#{checkin}, s_date=#{s_date}, email=#{email} where lockerid=#{confirm}
	 </update>
	 
	 <select id="selectSearchBookingCount2" resultType="Integer">
		select count(*) from booking where id like '%'||#{inputValue}||'%'
	</select>
	
	<select id="selectSearchBookingCount3" resultType="Integer">
		select count(*) from booking where email like '%'||#{inputValue}||'%'
	</select>
</mapper>